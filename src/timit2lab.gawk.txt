function ceil(valor)
{
   return (valor == int(valor)) ? valor : int(valor)+1
}

function print_output( cls, cls_cnt )
{
   for ( i = 0; i <= cls_cnt; i++ )
      if ( i == cls )
         printf( " 1" );
      else
         printf( " 0" );
}
   
BEGIN {phase = 0; cls_count = 0; phone_count = 0; delta = 0.01; t0 = 0.0125; freq = 16000.0; }
{
   if ( phase == 0 )
   {
      if ( $1 == "****" )
      {
         phase = 1;
      }
      else
      {
         for ( j = 1; j <= NF; j++ )
         {
            ph_symb = $j;
            phone_class[ ph_symb ] = cls_count;
            phone_count++;
         }
         cls_count++;
      }         
   }
   else
   {
      sb = $1;
      se = $2;
      ts = sb / freq;
      te = (se - 1.0) / freq;
      is = ceil( (ts - t0)/delta );
      ie = int( (te - t0)/delta )
      if ( $3 in phone_class )
      {
         phn = phone_class[$3];      
         if ( ie >= is )
         {  
            # printf( "%s  %d    %f %f  %f    %d  %d    %d ", $3, phn, ts*1000, te*1000, (te-ts)*1000, is, ie, ie - is + 1 );
            printf( "%d  %d    ", is, ie );
            print_output( phn, cls_count );
            printf("\r\n" );
         }
      }
      else
      {
         if ( ie >= is )
         {  
            # printf( "%s  %d    %f %f  %f    %d  %d    %d ", $3, phn, ts*1000, te*1000, (te-ts)*1000, is, ie, ie - is + 1 );
            printf( "%d  %d    ", is, ie );
            print_output( cls_count, cls_count );
            printf("\r\n" );
         }
      }
   }
}
END { printf( "****\r\n" ); }